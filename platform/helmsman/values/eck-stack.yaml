eck-elasticsearch:
  version: 8.5.3
  enabled: true
  fullnameOverride: elasticsearch
  nodeSets:
    - name: default
      count: 3
      config:
        node.store.allow_mmap: false
      podTemplate:
        spec:
          containers:
          - name: elasticsearch
            resources:
              requests:
                cpu: 1
              limits:
                memory: 2Gi

eck-kibana:
  version: 8.5.3
  enabled: true
  fullnameOverride: kibana
  spec:
    elasticsearchRef:
      name: elasticsearch
    http:
      service:
        spec:
          type: LoadBalancer # default is ClusterIP
    config:
      xpack.fleet.agents.elasticsearch.hosts: ["https://elasticsearch-es-http.development.svc:9200"]
      xpack.fleet.agents.fleet_server.hosts: ["https://fleet-server-agent-http.development.svc:8220"]
      xpack.fleet.packages:
        - name: system
          version: latest
        - name: elastic_agent
          version: latest
        - name: fleet_server
          version: latest
      xpack.fleet.agentPolicies:
        - name: Fleet Server on ECK policy
          id: eck-fleet-server
          is_default_fleet_server: true
          namespace: default
          monitoring_enabled:
            - logs
            - metrics
          unenroll_timeout: 900
          package_policies:
          - name: fleet_server-1
            id: fleet_server-1
            package:
              name: fleet_server
        - name: Elastic Agent on ECK policy
          id: eck-agent
          namespace: default
          monitoring_enabled:
            - logs
            - metrics
          unenroll_timeout: 900
          is_default: true
          package_policies:
            - name: system-1
              id: system-1
              package:
                name: system

eck-fleet-server:
  version: 8.5.3
  enabled: true
  fullnameOverride: fleet-server
  spec:
    kibanaRef:
      name: kibana
    elasticsearchRefs:
      - name: elasticsearch
    deployment:
      replicas: 1
      podTemplate:
        spec:
          serviceAccountName: elastic-agent
          automountServiceAccountToken: true
          securityContext:
            runAsUser: 0

eck-agent:
  version: 8.5.3
  enabled: true
  spec:
    elasticsearchRefs: []
    kibanaRef:
      name: kibana
    fleetServerRef:
      name: fleet-server
    mode: fleet
    daemonSet:
      podTemplate:
        spec:
          serviceAccountName: elastic-agent
          automountServiceAccountToken: true
          tolerations:
            - key: node-role.kubernetes.io/control-plane
              effect: NoSchedule
            - key: node-role.kubernetes.io/master
              effect: NoSchedule
          containers:
            - name: agent
              securityContext:
                runAsUser: 0
              resources: # override the default resources set by the operator
                limits:
                  memory: 512Mi
                requests:
                  memory: 512Mi
  clusterRole:
    name: elastic-agent
    rules:
      - apiGroups: [""]
        resources:
          - namespaces
          - pods
          - nodes
          - nodes/metrics
          - nodes/proxy
          - nodes/stats
          - events
          - persistentvolumeclaims
          - services
        verbs:
          - get
          - watch
          - list
      - apiGroups: ["apps"]
        resources:
          - daemonsets
        verbs:
          - get
          - watch
          - list
      - apiGroups: ["rbac.authorization.k8s.io"]
        resources:
          - roles
          - rolebindings
          - clusterroles
          - clusterrolebindings
        verbs:
          - get
          - watch
          - list
      - apiGroups: ["policy"]
        resources:
          - podsecuritypolicies
        verbs:
          - get
          - watch
          - list
      - apiGroups: ["coordination.k8s.io"]
        resources:
          - leases
        verbs:
          - get
          - create
          - update
      - nonResourceURLs:
          - "/metrics"
        verbs:
          - get
          - watch
          - list
      - apiGroups: ["extensions"]
        resources:
          - replicasets
        verbs:
          - "get"
          - "list"
          - "watch"
      - apiGroups:
          - "apps"
        resources:
          - statefulsets
          - deployments
          - replicasets
        verbs:
          - "get"
          - "list"
          - "watch"
      - apiGroups:
          - "batch"
        resources:
          - jobs
        verbs:
          - "get"
          - "list"
          - "watch"
# kube-metrics-kube-state-metrics.development.svc:8080
